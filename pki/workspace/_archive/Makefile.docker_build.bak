################################################################################
# VAULT POC CLIENT NGINX
#
# @file
# @version 0.1
#
##########
# PREREQUISITES
#   - Docker
#   - Kind
#   - kubectl
#   - Vault CLI
#   - Terraform
#   - make
#   - jq
#   - curl
#   - PGP/GPG/PASS
#   - Vault PKI Engines, Auth, Policies, Certs, Roles, etc.,
################################################################################


##########
#
#


##########
# CERT - BUNDLE
#
cert-bundle:
	cat tmp/intermediate.json | jq -r '.data.certificate' > tmp/server.certificate
	cat tmp/intermediate.json | jq -r '.data.private_key' > tmp/server.private_key
	cat tmp/intermediate.json | jq -r '.data.issuing_ca' > tmp/server.issuing_ca
	cat tmp/intermediate.json | jq -r '.data.serial_number' > tmp/server.serial_number
	mv tmp/server.bundle tmp/server.bundle.$(shell date +"%Y%m%d-%H%M%S").bak
	cat tmp/server.certificate tmp/server.private_key tmp/server.issuing_ca > tmp/server.bundle

##########
# BUILD CLIENT IMAGE
#
build:
	docker build -t pkiclient:0.3 -f ./Dockerfile .
	docker image tag pkiclient:0.3 pkiclient:latest

##########
# TEST CLIENT IMAGE
#
test:
#    docker run -it -e VAULT_TOKEN=$(pass vault/pki_test) --privileged -p 9001:80 -p 9002:443 --name pkiclient pkiclient:0.1 bash
	docker run -it --privileged -p 9001:80  -p 9002:443 --name testnginx pkiclient:latest bash

##########
# RUN CLIENT IMAGE
#
run:
	docker run -d --privileged -p 9001:80 -p 9002:443 --name testnginx pkiclient:latest
