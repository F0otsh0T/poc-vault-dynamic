################################################################################
# VAULT PKI API - PKI_INT CREATE & PROCESS INTERMEDIATE CERTIFICATE
# @file
# @version 0.1
#
##########
# PREREQUISITES
#   - Docker
#   - Kind
#   - kubectl
#   - Vault CLI
#   - Terraform
#   - make
#   - jq
#   - curl
#   - PGP / pass
#   - Vault PKI Engines, Auth, Policies, Certs, Roles, etc.,
################################################################################


##########
# GENERATE INTERMEDIATE CERTIFICATE
#
cert-create:
	curl -k --header "X-Vault-Token: $(shell pass vault/token)" --request POST --data @body/cert-create.json https://127.0.0.1:8200/v1/pki_int/issue/y0y0dyn3-dot-com > workspace/tmp/intermediate.json

##########
# FORMAT INTERMEDIATE CERTIFICATE FOR CLIENT CONSUMPTION
#
cert-format:
	touch workspace/tmp/server.bundle
	cat workspace/tmp/intermediate.json | jq -r '.data.certificate' > workspace/tmp/server.certificate
	cat workspace/tmp/intermediate.json | jq -r '.data.private_key' > workspace/tmp/server.private_key
	cat workspace/tmp/intermediate.json | jq -r '.data.issuing_ca' > workspace/tmp/server.issuing_ca
	cat workspace/tmp/intermediate.json | jq -r '.data.serial_number' > workspace/tmp/server.serial_number
	cp workspace/tmp/server.bundle workspace/tmp/server.bundle.$(shell date +"%Y%m%d-%H%M%S").bak
	cat workspace/tmp/server.certificate workspace/tmp/server.private_key workspace/tmp/server.issuing_ca > workspace/tmp/server.bundle
#	cat workspace/tmp/server.certificate workspace/tmp/server.issuing_ca > workspace/tmp/server.bundle

##########
# LIST CERTS
#
cert-list:
	curl -k --header "X-Vault-Token: $(shell pass vault/token)" --request LIST https://127.0.0.1:8200/v1/pki_int/certs | jq

##########
# READ CERT
#
cert-read:
	curl -k --header "X-Vault-Token: $(shell pass vault/token)" --request GET https://127.0.0.1:8200/v1/pki_int/cert/$(shell cat workspace/tmp/server.serial_number) | jq

##########
# REVOKE INTERMEDIATE CERTIFICATE
#
cert-revoke:
	touch cert-revoke.json
	cp body/cert-revoke.json body/cert-revoke.json.$(shell date +"%Y%m%d-%H%M%S")
	echo '{ "serial_number": "$(shell cat workspace/tmp/server.serial_number)" }' > cert-revoke.json
	curl -k --header "X-Vault-Token: $(shell pass vault/token)" --request POST --data @body/cert-revoke.json https://127.0.0.1:8200/v1/pki_int/revoke | jq > workspace/tmp/revoke.out

##########
# CERTIFICATE TIDY
#
cert-tidy:
	curl -k --header "X-Vault-Token: $(shell pass vault/token)" --request POST --data @body/cert-tidy.json https://127.0.0.1:8200/v1/pki_int/tidy | jq > workspace/tmp/tidy.out

